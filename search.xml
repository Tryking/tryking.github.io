<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[17.12月份_2LeetCode]]></title>
    <url>%2F2017%2F12%2F18%2F17-12%E6%9C%88%E4%BB%BD_2LeetCode%2F</url>
    <content type="text"><![CDATA[12/18/2017 8:01:03 AM496. Next Greater Element I You are given two arrays (without duplicates) nums1 and nums2 where nums1’s elements are subset of nums2. Find all the next greater numbers for nums1’s elements in the corresponding places of nums2. The Next Greater Number of a number x in nums1 is the first greater number to its right in nums2. If it does not exist, output -1 for this number. Example:https://leetcode.com/problems/next-greater-element-i/description/ class Solution { public int[] nextGreaterElement(int[] nums1, int[] nums2) { List&lt;Integer&gt; result = new ArrayList(); for(int i=0; i &lt; nums1.length; i++){ int j = 0; boolean isStart = false; boolean isAdded = false; for(; j &lt; nums2.length; j++){ if(nums2[j] == nums1[i]){ isStart = true; } if(isStart &amp;&amp; nums2[j] &gt; nums1[i]){ result.add(nums2[j]); isAdded = true; break; } } if(!isAdded){ result.add(-1); } } int[] r = new int[result.size()]; for(int i=0; i &lt; result.size(); i++){ r[i] = result.get(i); } return r; } } 调试多次，一次Accepted Your runtime beats 9.32 % of java submissions. 12/19/2017 7:56:16 AM485. Max Consecutive Ones Given a binary array, find the maximum number of consecutive 1s in this array. Example: https://leetcode.com/problems/max-consecutive-ones/description/ class Solution { public int findMaxConsecutiveOnes(int[] nums) { int packet = 0; int tempMax = 0; for(int i = 0; i &lt; nums.length; i++){ if(nums[i] == 1){ tempMax += 1; if(i == nums.length - 1 &amp;&amp; packet &lt; tempMax){ packet = tempMax; } }else{ if(packet &lt; tempMax){ packet = tempMax; } tempMax = 0; } } return packet; } } 第二次Accept，第一次忘了对末尾是1的情况做判断。 Your runtime beats 25.29 % of java submissions. consecutive：连续地]]></content>
  </entry>
  <entry>
    <title><![CDATA[如何在不同的机器上使用Hexo更新博客]]></title>
    <url>%2F2017%2F12%2F16%2F%E5%A6%82%E4%BD%95%E5%9C%A8%E4%B8%8D%E5%90%8C%E7%9A%84%E6%9C%BA%E5%99%A8%E4%B8%8A%E4%BD%BF%E7%94%A8Hexo%E6%9B%B4%E6%96%B0%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[#如何在不同的机器上使用Hexo更新博客 安装npm（Node Package Manager，即node包管理器），Node.js默认会自带。 安装Hexo并完成环境搭建。（具体步骤见官网，很详细）。假设Hexo生成的博客文件在文件Blog下。 在Github上新建项目：tryking.github.io（注意前面的tryking是你自己的Github账号名，这个必须和账号名一样） 将tryking.github.io项目下载到本地，此时默认分支是master，新建一个分支hexo。将Blog文件夹整个拷贝到本地tryking.github.io项目下，上传hexo分支并且设置hexo分支为默认分支。 在Hexo全局配置文件_config.yml中招到 deploy: 将其内容更新为： deploy: type: git repo: git@github.com:Tryking/tryking.github.io.git branch: master 注意branch为master，因为我们要将发布的博客放到master分支，但是生成博客所需要的Hexo文件放在hexo分支中。这样两者才不冲突。 根据Hexo官方教程，发布项目到github： hexo g -d 以后在Blog文件夹下进行hexo的操作，然后定期可以在tryking.github.io下commit hexo的分支内容，保证所需的文件不会丢失。 在新电脑上只需要pull hexo分支，然后在Blog文件夹下进行Hexo的操作即可。 Over.]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[17.12月份_1LeetCode]]></title>
    <url>%2F2017%2F12%2F15%2F17-12%E6%9C%88%E4%BB%BD_1LeetCode%2F</url>
    <content type="text"><![CDATA[12/15/2017 11:00:39 PM344. Reverse String Write a function that takes a string as input and returns the string reversed. Example:Given s = “hello”, return “olleh”. class Solution { public String reverseString(String s) { StringBuilder sb = new StringBuilder(); for(int i=s.length()-1; i&gt;=0; i--){ sb.append(s.charAt(i)); } return sb.toString(); } } runtime: 5ms result: Your runtime beats 14% of java submissions. 12/16/2017 9:02:32 AM620. Not Boring Movies X city opened a new cinema, many people would like to go to this cinema. The cinema also gives out a poster indicating the movies’ ratings and descriptions. Please write a SQL query to output movies with an odd numbered ID and a description that is not ‘boring’. Order the result by rating. For example: https://leetcode.com/problems/not-boring-movies/description/ select id, movie, description, rating from cinema where id%2=1 and description!=&apos;boring&apos; order by rating desc 提交两遍通过，第一遍没有理解题意。 result: Your runtime beats 58.30 % of mysql submissions. 733. Flood Fill An image is represented by a 2-D array of integers, each integer representing the pixel value of the image (from 0 to 65535). Given a coordinate (sr, sc) representing the starting pixel (row and column) of the flood fill, and a pixel value newColor, “flood fill” the image. To perform a “flood fill”, consider the starting pixel, plus any pixels connected 4-directionally to the starting pixel of the same color as the starting pixel, plus any pixels connected 4-directionally to those pixels (also with the same color as the starting pixel), and so on. Replace the color of all of the aforementioned pixels with the newColor. At the end, return the modified image. PS：理解不了题意，不会做。https://leetcode.com/problems/flood-fill/description/ 12/17/2017 8:19:22 PM682. Baseball Game You’re now a baseball game point recorder. Given a list of strings, each string can be one of the 4 following types: Integer (one round’s score): Directly represents the number of points you get in this round. “+” (one round’s score): Represents that the points you get in this round are the sum of the last two valid round’s points. “D” (one round’s score): Represents that the points you get in this round are the doubled data of the last valid round’s points. “C” (an operation, which isn’t a round’s score): Represents the last valid round’s points you get were invalid and should be removed. Each round’s operation is permanent and could have an impact on the round before and the round after. You need to return the sum of the points you could get in all the rounds. class Solution { public int calPoints(String[] ops) { int result = 0; List&lt;Integer&gt; temp = new ArrayList(); for(int i=0; i&lt;ops.length; i++){ String r = ops[i]; if(r.equals(&quot;C&quot;)){ result -= temp.get(temp.size()-1); temp.remove(temp.size()-1); }else if(r.equals(&quot;D&quot;)){ result += temp.get(temp.size()-1)*2; temp.add(temp.get(temp.size()-1)*2); }else if(r.equals(&quot;+&quot;)){ result += (temp.get(temp.size()-1) + temp.get(temp.size()-2)); temp.add(temp.get(temp.size()-1) + temp.get(temp.size()-2)); }else{ result += Integer.parseInt(r); temp.add(Integer.parseInt(r)); } } return result; } } 查资料：list移除元素：list.remove(list.size()-1) 第二次Accept Your runtime beats 17.29% of java submission.]]></content>
  </entry>
  <entry>
    <title><![CDATA[闲言碎语]]></title>
    <url>%2F2017%2F12%2F15%2F%E9%97%B2%E8%A8%80%E7%A2%8E%E8%AF%AD%2F</url>
    <content type="text"><![CDATA[Test 文章今天下地铁，刚出地铁口，有一妹子喊住我，问我能不能请她在附近吃个东西。想也没多想，肯定是骗局，遂扭头走了。在回来的路上，还不断反思，自己现在怎么这么没有善心，心里非常堵。后来回来跟行行说了这件事，行行说他也遇到了，这肯定是个骗局，但是具体要怎么行骗还不清楚。 哈，顿时释然~ 新搭建起的blog，要利用起来。 Markdown 语法下面这个表格格式出不来，很郁闷 dog | bird | cat ----|------|---- foo | foo | foo bar | bar | bar baz | baz | baz dog bird cat foo foo foo bar bar bar baz baz baz]]></content>
      <categories>
        <category>Test&#39;</category>
      </categories>
      <tags>
        <tag>Test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F12%2F14%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment 2017/12/151test]]></content>
      <categories>
        <category>Test&#39;</category>
      </categories>
      <tags>
        <tag>Test</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[2016年，今天我也有话说]]></title>
    <url>%2F2016%2F12%2F31%2F2016%E5%B9%B4%EF%BC%8C%E4%BB%8A%E5%A4%A9%E6%88%91%E4%B9%9F%E6%9C%89%E8%AF%9D%E8%AF%B4%2F</url>
    <content type="text"><![CDATA[本文开始于2016年12月31日19:17 看着自己今年“追随”的人都在写自己的年终总结，那我也来回顾回顾自己今年的事情吧。 整体来说，对今年的自己还比较满意，当然还是有很多不足，不过终归需要一步一步过渡吧，只要朝着好的方向，我相信慢慢会形成良性循环的。 今年都做了哪些事情呢？ 首先是前半年在实习，对于实习中的自己，相对来说也是比较满意的。在实习过程中，每天基本就干自己的事情，和身边他们正常上班的人很少打交道。一方面可能是自己的性格使然，另一方面，是因为自己认识到：以后和他们有交集的机会很少，与其把心思放在和他们打交道上，不如把时间都用来提升自己。但是也要认识到自己的性格确实有点怪，在以后正常上班后应逐渐转变。 在实习中，自己的专业知识还是提升了不少的，当然，这只是相对于自己本科的时候。本科把大量的精力用在了kill time上，混混沌沌地过了两年多。不过庆幸地是，在大三上学期决定了要考研，于是从那时起就开始断断续续地学习（没错，之前都没学习过），并在大四开学的时候正式进入考研复习阶段。果真，上天不会辜负每一个善待自己的人，自己顺利地迈入了研究生的行列。 今年上半年，在实习的日子里，还考了证券从业资格证，虽然这个证书没有什么含金量，和自己的专业也没有半毛钱关系，但是自己如果以后要投资股票，这些知识都是有必要了解的，而且这个证书的有效期是终生有效的。假如以后自己真要转行进入证券业，这个证书也是必不可少的。因此，考这个很划算，虽然现在里面的东西真正记住的没多少，不过相信经历过的终究会对自己的人生造成影响。金融市场基础知识考了67，证券市场基本法律法规考了83，记录一下。 在实习的时候，大夏天那会，天气真是贼热。不过，还好公司的空调基本是整天开放的。每天早上吃完饭到公司，中午基本每天都是叫外卖，然后晚上出外面吃个饭再回公司学习。所以，虽然天气很热，但是自己也是没有机会感受的，得益于公司的空调，我成功地把自己的膝盖整坏了。整天就在空调下面吹，要多爽有多爽。遗憾地是，夏末的时候，发现自己继续穿短裤吹空调膝盖不舒服地厉害。这时，才发现自己的膝盖已经有问题了。想想也是，之前在北方，根本就没有这样吹过空调，但是在实习公司连续几个月每天都这样吹，自己的身体显然受不了。刚回学校时，发现有时候裸膝盖吹电扇都不舒服，明年看，如果还是有问题那真得去看医生了。 七月份的时候，发现华为公司举办了一个“创想杯”校园开发者大赛活动，不过那时离报名时间已经很近了。当时，由于读了笑来老师的《把时间做当作朋友》，一路追到柳比歇夫。脑袋一热，就想做一个记录时间的APP，当时主要是想练练自己的编程技术，于是开始尝试做。发现华为公司举办的活动时，自己做的东西还很少，很不成型，于是匆忙将其乱搞了一番，提交参加比赛了，当时想反正也不损失什么，就当玩玩儿了。不过，可能是自己遭到幸运女神地临幸了，也可能是其他的作品都太low了，我的作品竟然出乎意料地进入了72强。于是，拉上自己的小伙伴给自己写了服务端，又将其进一步完善了下，但是完成度依然很低，继续参加后续地比赛。当然这次比赛结果自己也料到了，止于72强。不过，如今，用过了许多这方面好的APP后，真的不好意思说参加比赛的那个应用是自己做的。买的阿里云服务器也不想继续续费了，虽然每个月只有10元，但是感觉没什么意义，已放弃维护那个APP，泪崩ing。 从8月20号之后开始找工作，大约一直持续到10月底，两个月时间，过程虽然很辛苦，但是结果还算让人满意。刚开始的时候是笔试通过不了，根本没面试机会，看着宿舍的小伙伴都有好多面试，说不着急是假的。后来，逐渐有了面试机会，自己把握的也都还好，最主要的是运气好。目前手里有了两个可以说的过去的offer，已经签约的一个某xing，但是这个准备违约，另一个是某gu，也就是准备再次签约的公司。现在感觉对于我们这种技术渣渣，面试真的很看脸，运气占很大一部分。当然我的认知可能有错，但是我这两个offer我真的料不到我能拿上。 今年还值得自己自豪的事情可能算是今年健身时间比较长吧。在实习的时候，自己一个人住，也比较方便，就买了瑜伽垫，跟着KEEP上的课程开始做运动。每天大约20多分钟，对于健身大牛来说，这可能真是太少了，不过，目前对于我来说，这就很不错了，自己的身体素质不是很好，慢慢持续下去，等身体起来了再开始加大量也不迟。刚刚看了下KEEP，发现我又在骗自己了，自己今年累计锻炼才94天，总共训练2412分钟。其实自己中间有好多空闲期没有锻炼的，比如找工作那段时间就没有锻炼。不过，我最近真的有一直在锻炼啊，看了下记录，11月份锻炼26天，12月份锻炼20天。（PS：我现在要去锻炼一组，再回来写文章，不能给今年留下遗憾。） OK，锻炼完了，继续。现在在正式统计一下我今年在健身方面的东西： Keep总共训练计时：2425分钟 KEEP累计训练：95天 训练项目： 徒手胸肌初级训练：53次 腹肌撕裂者初级：51次 深蹲入门：17次 徒手胸肌进阶训练：36次 腹肌撕裂者进阶：29次 俯卧撑入门：6次 健身方面目前还是准备跟上Keep做一些基础的动作，等明年入职工作后，身体素质可以了，再考虑健身房。嗯，就酱。 今年还有收获就是在得到APP订阅了三个专栏，分别是通往财富自由之路，5分钟商学院和王烁大学问。三个专栏都不错，笑来老师帮我升级认知，刘润老师给我讲解商学知识，王烁老师领我观看新的世界。但是我深知光是看是远远不够的，实践才最重要，不然只是高兴了当时，过去后就什么都没了。这方面做的不是特别好，虽然之前也有在做笔记，但是几乎没有回顾。可能是订阅的太多了，精力真的是跟不上。故决定以后不管感觉有多好的专栏都暂时不订阅了，就尽量消化这三个专栏的内容。订阅这些产品让我真真正正感觉到了付费的好处，帮自己省出精力去筛选东西，跟着真正的大牛去学东西。但是可能由于现在没有什么经济来源，对于笑来老师的新生大学APP中的那些很贵的订阅还是有些抵触，感觉有些不值，虽然我真的很钦佩笑来老师。 在笑来老师的影响下，看了《人人都能用英语》，开始读原版书，选了《Animal Farm》，目前读了3.5章，历时33h24m。每天是先把之前看过的朗读一遍，然后再开始看新的内容，读到不懂的地方看对应的单词笔记，因此读的可能慢了许多。发现这样读的效果真的很不错，许多生词在读过很多遍后，再遇到的时候竟然真的认识了。不过，这本书暂时已经放下了。因为后来遇到了乐乐老师，目前在跟着乐乐老师读《Succeed:How we can reach our goals》。等跟着乐乐老师把这本书读完后，再考虑读《Animal Farm》。 今年暂时想说的也就这么多了，其实，是自己的写作太差了，真的不知道该写什么了。终究还是因为自己读的书少，输入少。 那我也来庸俗的定下2017的目标吧： 顺利毕业，这是最重要的。那接下来要做的就是多给毕业论文分配点时间，好好搞论文。 如果健身方面还是使用Keep，明年总时间量至少要达到3000分钟。这根本不多，才50小时而已。 公众号至少更新12篇，也就是每月1篇。对于写作这个，我真的不敢给自己下毒手，但是我知道写作的好处太多了，尽量多写吧。 把目前手中买的没读完的书读完。不读完不能买新书，不能因为有的商城搞活动就买。（ps：工作方面要用的除外） 暂时就这四个吧，其他比较琐碎的暂时也想不到了。写这个主要是为了给2017年末的自己看。 以上就是我的2016的回顾以及2017的打算，由于时间匆忙以及自己的写作水平有限，暂时就写这么多了。期待2017遇见更好的自己，期待以后的时光能感谢2017年的自己。相信时间的力量！ 本文结束于：2016年12月31日22：22 PS：本文整理于12/17/2017 9:09:21 PM ，偶然间翻有道云笔记看到的，就放上来了。]]></content>
      <categories>
        <category>旧文整理</category>
      </categories>
      <tags>
        <tag>随想</tag>
      </tags>
  </entry>
</search>
